У такому випадку краще використати власне діалогове вікно для повідомлень. Ось як можна це зробити:
``` python
def show_info_dialog(self, title, message):
    dialog = tk.Toplevel(self.root)
    dialog.title(title)
    dialog.geometry("300x150")

    # Зробити вікно модальним
    dialog.transient(self.root)
    dialog.grab_set()

    # Налаштування тексту повідомлення
    label = ttk.Label(dialog, text=message, font=('Comic Sans MS', 13, 'bold'), wraplength=250)
    label.pack(expand=True, pady=20)

    # Кнопка OK
    ok_button = ttk.Button(dialog, text="OK", command=dialog.destroy)
    ok_button.pack(pady=10)

    # Центрування вікна відносно головного вікна
    dialog.geometry("+{}+{}".format(
        self.root.winfo_x() + self.root.winfo_width()//2 - 150,
        self.root.winfo_y() + self.root.winfo_height()//2 - 75
    ))

    # Чекаємо закриття вікна
    self.root.wait_window(dialog)
```
Потім замініть всі виклики `messagebox.showinfo` на:
``` python
self.show_info_dialog("Успіх", "Дані успішно збережено!")
```
Це створить власне діалогове вікно з більшим шрифтом та кращим контролем над виглядом.
Також можна зробити аналогічні методи для помилок та попереджень:
``` python
def show_error_dialog(self, title, message):
    dialog = tk.Toplevel(self.root)
    dialog.title(title)
    dialog.geometry("300x150")
    dialog.transient(self.root)
    dialog.grab_set()

    label = ttk.Label(dialog, text=message, font=('Comic Sans MS', 13, 'bold'),
                      wraplength=250, foreground='red')
    label.pack(expand=True, pady=20)

    ok_button = ttk.Button(dialog, text="OK", command=dialog.destroy)
    ok_button.pack(pady=10)

    dialog.geometry("+{}+{}".format(
        self.root.winfo_x() + self.root.winfo_width()//2 - 150,
        self.root.winfo_y() + self.root.winfo_height()//2 - 75
    ))

    self.root.wait_window(dialog)
```
І замінити виклики `messagebox.showerror` на:
``` python
self.show_error_dialog("Помилка", "Будь ласка, введіть коректні числові значення")
```

